{"version":3,"sources":["logo.svg","text-scramble.js","ScrambleWord.js","gif/1.gif","gif/2.gif","gif/3.gif","gif/4.gif","gif/5.gif","gif/6.gif","Glitch.js","DigitHover.js","WaveWords.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["getRandomInt","min","max","Math","floor","random","getRandomChar","rand","String","fromCharCode","TextScramble","play","setPlay","text","speed","seed","seedInterval","step","stepInterval","scramble","requestRef","onComplete","React","useRef","elapsedRef","fpsInterval","tickRef","startCharRef","scrambleRef","textRef","animate","time","timeElapsed","current","requestAnimationFrame","draw","i","pos","length","seedRandomCharacters","currentIndex","moveCharIndex","newString","charsDone","cPos","innerHTML","cancelAnimationFrame","useEffect","Array","ref","ScrambleWord","paragraph","startPlay","fullScramble","useState","setText","handleComplete","useCallback","setTimeout","cursorItems","image","gif1","title","credits","creator","contributor","gif2","gif3","gif4","gif5","gif6","Glitch","isHovered","setIsHovered","activeIndex","setActiveIndex","activeImage","setActiveImage","activeInfo","setActiveInfo","checkStatus","index","className","class","src","alt","style","position","minHeight","minWidth","zIndex","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","marginTop","map","item","opacity","alignItems","justifyContent","onMouseEnter","console","log","changeBackground","onMouseLeave","Scrambles","date","scores","name","mapLetters","DigitHover","key","word","scrambleSet","display","flexDirection","articles","link","description","year","WaveWords","href","rel","target","aria-label","aria-hidden","Navbar","clasName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad05743e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\nimport React, { useRef, useCallback } from \"react\";\n\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction getRandomChar() {\n  const rand = getRandomInt(0, 60);\n  return String.fromCharCode(rand + 65);\n}\n\nexport const TextScramble = ({\n  play,\n  setPlay,\n  text,\n  speed = 1,\n  seed = 1,\n  seedInterval = 10,\n  step = 1,\n  stepInterval = 1,\n  scramble = 10,\n  onComplete\n}) => {\n  // animation frame request\n  const requestRef = React.useRef();\n\n  // time elapsed\n  const elapsedRef = useRef(0);\n  const fpsInterval = 1000 / (60 * speed);\n\n  // scramble tick\n  const tickRef = useRef(0);\n\n  // current characted index ref\n  const startCharRef = useRef(0);\n\n  // scramble controller\n  const scrambleRef = useRef();\n\n  // text node ref\n  const textRef = useRef();\n\n  const seedRandomCharacters = () => {\n    for (var i = 0; i < seed; i++) {\n      const pos = getRandomInt(startCharRef.current, text.length);\n      scrambleRef.current[pos] = scrambleRef.current[pos] || scramble;\n    }\n  };\n\n  const moveCharIndex = () => {\n    for (var i = 0; i < step; i++) {\n      const currentIndex = startCharRef.current;\n      scrambleRef.current[currentIndex] =\n        scrambleRef.current[currentIndex] || Math.floor(scramble);\n      startCharRef.current += 1;\n    }\n  };\n\n  const animate = (time) => {\n    const timeElapsed = time - elapsedRef.current;\n\n    requestRef.current = requestAnimationFrame(animate);\n\n    if (timeElapsed > fpsInterval) {\n      // timeRef.current = time - (timeElapsed % fpsInterval);\n      elapsedRef.current = time;\n      draw();\n    }\n  };\n\n  const draw = () => {\n    if (tickRef.current % seedInterval === 0) {\n      seedRandomCharacters();\n    }\n\n    if (tickRef.current % stepInterval === 0) {\n      moveCharIndex();\n    }\n\n    let newString = \"\";\n    let charsDone = 0;\n\n    for (var i = 0; i < text.length; i++) {\n      const cPos = scrambleRef.current[i];\n\n      switch (true) {\n        case text[i] === \" \":\n          newString += \" \";\n          charsDone++;\n          break;\n        case cPos <= 0:\n          newString += text[i];\n          charsDone++;\n          break;\n        case cPos >= 0 && i <= startCharRef.current:\n          newString += getRandomChar();\n          scrambleRef.current[i] -= 1;\n          break;\n        case cPos >= 0:\n          newString += getRandomChar();\n          break;\n        default:\n          newString += \"<span>&nbsp;</span>\";\n      }\n    }\n\n    textRef.current.innerHTML = newString;\n\n    if (charsDone === text.length) {\n      cancelAnimationFrame(requestRef.current);\n \n        setPlay(false)\n      return;\n    }\n\n    tickRef.current += 1;\n  };\n\n  React.useEffect(() => {\n    tickRef.current = 0;\n    startCharRef.current = 0;\n    scrambleRef.current = new Array(text.length);\n  }, [text, play]);\n\n  React.useEffect(() => {\n    if (play) {\n      requestRef.current = requestAnimationFrame(animate);\n    } else {\n      cancelAnimationFrame(requestRef.current);\n    }\n    return () => {\n      cancelAnimationFrame(requestRef.current);\n    };\n  }, [animate, play]); // Make sure the effect runs only once\n\n  return <p ref={textRef}>{text}</p>;\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\n\n\nimport { TextScramble } from \"./text-scramble\";\n\nconst samples = [\n  \"Bringing together features from early European grotesques and American gothics, Averta  is a geometric sans serif family with a simple, yet appealing, personality.\",\n  \"Our new Preview feature is like a private playground for developers, designers, and content creators\"\n];\n\nexport default function ScrambleWord({paragraph, startPlay, fullScramble}) {\n  const [text, setText] = useState(0);\n  const [play, setPlay] = useState(false)\n\n  function resetPlay() {\n      setText(0)\n      setPlay(true)\n  }\n\n  const handleComplete = useCallback(() => {\n    setTimeout(() => {\n      if (text === 0) {\n        setText(1);\n      } else {\n        setText(0);\n      }\n    }, 850);\n  }, [text]); \n\n\n\n  //    onMouseEnter={resetPlay}\n\n  return (\n    <div>\n   \n      <div\n\n      >\n        <TextScramble\n    \n          play={fullScramble ? fullScramble : startPlay ? startPlay : play}\n          setPlay = { setPlay}\n          \n          text={paragraph}\n          speed={1.2}\n          seed={1}\n          seedInterval={10}\n          step={1}\n          stepInterval={1}\n   \n          onComplete={handleComplete}\n        />\n      </div>\n    </div>\n  );\n}\n\n","export default __webpack_public_path__ + \"static/media/1.80fc943b.gif\";","export default __webpack_public_path__ + \"static/media/2.627a9d8b.gif\";","export default __webpack_public_path__ + \"static/media/3.5e5ed9e1.gif\";","export default __webpack_public_path__ + \"static/media/4.ccef23b7.gif\";","export default __webpack_public_path__ + \"static/media/5.24688195.gif\";","export default __webpack_public_path__ + \"static/media/6.aeaa19fe.gif\";","import React, { useState } from \"react\";\n\nimport IngredientProvider from \"@react-ingredients/ingredients-provider\";\nimport MomentumScroll from \"@react-ingredients/momentum-scroll\";\nimport Cursor, { Target } from \"@react-ingredients/cursor\";\nimport MagneticTransform from \"@react-ingredients/magnetic-transform\";\nimport ScrambleWord from \"./ScrambleWord\";\nimport \"./Glitch.scss\";\nimport gif1 from \"./gif/1.gif\";\nimport gif2 from \"./gif/2.gif\";\nimport gif3 from \"./gif/3.gif\";\nimport gif4 from \"./gif/4.gif\";\nimport gif5 from \"./gif/5.gif\";\nimport gif6 from \"./gif/6.gif\";\n\nconst cursorItems = [\n  {\n    image: gif1,\n    title: \"Kansas, USA\",\n    time: \"0:00:14\",\n    credits: {\n      creator: \"John Smith\",\n      title: \"Video of tornado during spring\",\n      contributor: \"Hello World\",\n    },\n  },\n  {\n    image: gif2,\n    title: \"Kansas, USA\",\n    time: \"0:00:14\",\n    credits: {\n      creator: \"John Smith\",\n      title: \"Video of tornado during spring\",\n      contributor: \"Hello World\",\n    },\n  },\n  {\n    image: gif3,\n    title: \"Kansas, USA\",\n    time: \"0:00:14\",\n    credits: {\n      creator: \"John Smith\",\n      title: \"Video of tornado during spring\",\n      contributor: \"Hello World\",\n    },\n  },\n  {\n    image: gif4,\n    title: \"Arkansas, USA\",\n    time: \"0:00:14\",\n    credits: {\n      creator: \"John Smith\",\n      title: \"Video of tornado during spring\",\n      contributor: \"Hello World\",\n    },\n  },\n  {\n    image: gif5,\n    title: \"Virginia, USA\",\n    time: \"0:00:14\",\n    credits: {\n      creator: \"John Smith\",\n      title: \"Video of tornado during spring\",\n      contributor: \"Hello World\",\n    },\n  },\n  {\n    image: gif6,\n    title: \"Maryland, USA\",\n    time: \"0:00:14\",\n    credits: {\n      creator: \"John Smith\",\n      title: \"Video of tornado during spring\",\n      contributor: \"Hello World\",\n    },\n  },\n  {\n    image: gif1,\n    title: \"Ohio, USA\",\n    time: \"0:00:14\",\n    credits: {\n      creator: \"John Smith\",\n      title: \"Video of tornado during spring\",\n      contributor: \"Hello World\",\n    },\n  },\n  {\n    image: gif2,\n    title: \"Michigan, USA\",\n    time: \"0:00:14\",\n    credits: {\n      creator: \"John Smith\",\n      title: \"Video of tornado during spring\",\n      contributor: \"Hello World\",\n    },\n  },\n];\n\nfunction randomInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst placements = [\n\n  \"glitch__center__end\",\n  \"glitch__center__center\",\n  \"glitch__center__start\"\n]\n\nfunction Glitch() {\n  const [isHovered, setIsHovered] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(-1);\n  const [activeImage, setActiveImage] = useState(gif1);\n  const [activeInfo, setActiveInfo] = useState({\n    creator: \"\",\n    title: \"\",\n    contributor: \"\",\n  });\n\n  function changeBackground(item, index) {\n    console.log(item);\n    console.log(index);\n    setActiveIndex(index);\n    setIsHovered(true);\n    setActiveImage(item.image);\n    setActiveInfo(item.credits);\n  }\n\n  function checkStatus(index) {\n    if (!isHovered) {\n      return 1;\n    } else if (isHovered && index === activeIndex) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  function exitItem() {\n    setIsHovered(false);\n    setActiveImage(gif1);\n    setActiveInfo({\n      creator: \"\",\n      title: \"\",\n      contributor: \"\",\n    });\n  }\n\n  return (\n    <>\n      <IngredientProvider>\n        <MomentumScroll>\n          <Cursor>\n            <div className=\"center\">\n              <div class=\"image-container\">\n                <div class=\"image-frame\">\n                  <img src={activeImage} alt=\"\" />\n                </div>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  minHeight: \"100%\",\n                  minWidth: \"100vw\",\n                  zIndex: \"-1\",\n                  backgroundImage: `url(${activeImage})`,\n                  backgroundSize: \"cover\",\n                  backgroundRepeat: \"no-repeat\",\n                  backgroundPosition: \"center center\",\n                }}\n              ></div>\n\n              <div className=\"glitch__grid\" style={{marginTop: '50px'}}>\n                {cursorItems.map((item, index) => (\n                  <div >\n                  <div\n                    style={{ opacity: checkStatus(index), alignItems: 'center', justifyContent: index % 2 === 1 ? 'center' : 'flex-start' }}\n                    className= \"glitch__grid__item glitch__center__center\"\n                  >\n                    <MagneticTransform>\n                      <div\n                        className=\"grid__text\"\n                        onMouseEnter={() => changeBackground(item, index)}\n                        onMouseLeave={() => exitItem()}\n                      >\n                        <div className=\"grid__title\">{item.title}</div>\n                        <div className=\"grid__time\">{item.time}</div>\n                      </div>\n                    </MagneticTransform>\n                  </div>\n                  </div>\n                ))}\n              </div>\n              <div className=\"glitch-info\">\n                {isHovered ? (\n                  <div className=\"scramble-container\">\n                    <ScrambleWord\n                      paragraph={activeInfo.creator}\n                      startPlay={true}\n                    />\n                    <ScrambleWord\n                      paragraph={activeInfo.title}\n                      startPlay={true}\n                    />\n                    <ScrambleWord\n                      paragraph={activeInfo.contributor}\n                      startPlay={true}\n                    />\n                  </div>\n                ) : (\n                  <></>\n                )}\n              </div>\n            </div>\n          </Cursor>\n        </MomentumScroll>\n      </IngredientProvider>\n    </>\n  );\n}\n\nexport default Glitch;\n","import React from 'react'\n\nimport ScrambleWord from \"./ScrambleWord\";\n\nconst Scrambles = [\n  {\n    date: \"2020\",\n    scores: [\n      \"Hello my name is\",\n      \"Lorem ipsum genertor\",\n      \"Hello world\",\n      \"Scrambles\",\n    ],\n    name: \"Ooga booga\",\n  },\n  {\n    date: \"2020\",\n    scores: [\n      \"Hello my name is\",\n      \"Lorem ipsum genertor\",\n      \"Hello world\",\n      \"Scrambles\",\n    ],\n    name: \"Ooga booga\",\n  },\n];\n\n\nconst mapLetters = ['A','B', 'C', 'D', 'E']\n\n\n\n\nexport default function DigitHover() {\n    const [activeIndex, setActiveIndex] = React.useState(-1)\n\n    function scrambleSet(index) {\n        console.log(index)\n        setActiveIndex(index)\n    }\n  return (\n    <div className=\"digit-container\">\n      <div className=\"digit-section\">\n        <div className=\"digit-title\">\n        \n        <div>\n        DISCOVERY <span class=\"blinking-cursor\">|</span>\n        </div>\n        </div>\n\n        {Scrambles.map((item, key) => (\n          <div className=\"digit-item\">\n            <div className=\"digit-name\">{item.name}</div>\n            <div className=\"digit-scores\">\n              {item.scores.map((word, index) => (\n                  <div className=\"digit-scramble\"\n                  onMouseEnter={() => scrambleSet(mapLetters[key] + index)}\n                  onMouseLeave={() => setActiveIndex(-1)}\n                \n                  >\n                  <div style={{display: \"flex\", flexDirection: 'row'}}>\n                  <span className=\"scramble__span\">{index}</span>\n                <ScrambleWord paragraph= {word} fullScramble={mapLetters[key] + index == activeIndex ? true : false} />\n                </div>\n                <ScrambleWord paragraph={\"0:00:11\"} fullScramble={mapLetters[key] + index == activeIndex ? true : false} />\n                \n                </div>\n              ))}\n            </div>\n\n            <div className=\"digit-date\">{item.date}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import \"./Waves.scss\";\n\n\nconst articles = [\n\n  {\n    link: '#',\n    title: 'John Smith',\n    description: 'The home of john SMITH IN THE FUTURE',\n    year: '2010'\n  },  {\n    link: '#',\n    title: 'John Smith',\n    description: 'The home of john SMITH IN THE FUTURE',\n    year: '2010'\n  },\n  {\n    link: '#',\n    title: 'John Smith',\n    description: 'The home of john SMITH IN THE FUTURE',\n    year: '2010'\n  },\n  {\n    link: '#',\n    title: 'John Smith',\n    description: 'The home of john SMITH IN THE FUTURE',\n    year: '2010'\n  },\n  {\n    link: '#',\n    title: 'John Smith',\n    description: 'The home of john SMITH IN THE FUTURE',\n    year: '2010'\n  }\n]\n\n\nexport default function WaveWords() {\n  return (\n      <div className=\"main-page\">\n           <div className=\"digit-title\">\n        \n        <div>\n        DISCOVERY <span class=\"blinking-cursor\">|</span>\n        </div>\n        </div>\n    <section className=\"press\">\n      <div className=\"press-container\">\n\n      {articles.map((item) => \n        <a\n          href={item.link}\n          rel=\"noopener\"\n          target=\"_blank\"\n        >\n          <span className=\"press-container__media\" aria-label={item.title}>\n            <span aria-hidden=\"true\">{item.title}</span>\n          </span>{\" \"}\n          <span\n            className=\"press-container__title\"\n            aria-label={item.description}\n          >\n            <span aria-hidden=\"true\">\n            {item.description}\n            </span>\n          </span>{\" \"}\n          <span className=\"press-container__year\" aria-label={item.year}>\n            <span aria-hidden=\"true\">{item.year}</span>\n          </span>{\" \"}\n        </a>\n      \n      )}\n      \n  \n      </div>\n    </section>\n    </div>\n  );\n}\n","import \"./Navbar.scss\";\n\nexport default function Navbar() {\n  return (\n    <div className=\"top-navbar\">\n      <div className=\"navbar-container\">\n        <div className=\"navbar-left\">\n          <div className=\"navbar-title navbar-item\">ISHAN SENGUPTA</div>\n          <div className=\"navbar-item \">DIGITAL <span class=\"blinking-cursor\">|</span></div>\n        </div>\n        <div clasName=\"navbar-right\">\n          <div className=\"navbar-item typing\">BUZZWORD</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Glitch from './Glitch'\nimport DigitHover from './DigitHover'\nimport WavesWords from './WaveWords'\nimport Navbar from './Navbar'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Navbar/>\n    <Glitch/>\n    <DigitHover/>\n    <WavesWords/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}